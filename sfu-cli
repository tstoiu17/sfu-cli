#!/bin/sh
#
# A CLI for SFU Course Outlines Repository (http://www.sfu.ca/outlines.html)
# Uses this REST API: http://www.sfu.ca/outlines/help/api.html
#
# Dependencies: curl, fzf, jq
set -e

help() {
    printf "
    Usage:
    %s [options]

    Options:
        -y, --year
            Specify the year, or use 'current' or 'registration'
        -t, --term
            Specify the term, or use 'current' or 'registration'
        -d, --dept
            Specify the department
        -n, --number
            Specify the number
        -s, --section
            Specify the section
        -c, --cache
            Select a previously requested outline
        -p, --pretty
            Pretty print outline instead of default behaviour of outputting
            JSON. Ensure the python virtual environment is setup as shown in
            the README section titled \"Python Virtual Environment\".
        -h, --help
            Show this help message and exit
    \n" "${0##*/}"
    exit 0
}

# checks if dependencies are present
dep_check() {
    for dep; do
        command -v "$dep" >/dev/null \
            || echo "Program \"$dep\" not found. Please install it."
    done
}

#######################################
# Make a GET request and prompt the user to select one from the list
# Arguments:
#   url endpoint
#   params
# Returns:
#   the user selection
#######################################
request() {
    curl -s "$1?$2" | jq -r '.[].text' \
        | fzf  --layout=reverse --cycle --height=50% --prompt="?$2" --select-1 \
        | tr '[:upper:]' '[:lower:]'
}

main() {
    # init variables
    cache_dir="./.cache"
    use_cache=false
    pretty=false
    # Parse options
    while [ $# -gt 0 ]; do
        case "$1" in
            -y | --year)    year=$2; shift ;;
            -t | --term)    term=$2; shift ;;
            -d | --dept)    dept=$2; shift ;;
            -n | --number)  cnum=$2; shift ;;
            -s | --section) sect=$2; shift ;;
            -c | --cache)   use_cache=true ;;
            -p | --pretty)  pretty=true    ;;
            -h | --help)    help           ;;
            *) echo "Invalid option: $1"; exit 1 ;;
        esac
        shift
    done

    # check if dependencies are installed
    dep_check "curl" "jq" "fzf"

    if $use_cache; then
        if [ -d "$cache_dir" ]; then
            outline_file=$(find "$cache_dir" -type f -name 'outline.json' \
                | fzf  --layout=reverse --cycle --height=50% --select-1)
        else
            echo "No cached outlines to choose from."
            exit 1
        fi
    else
        # interactively get an outline
        url='http://www.sfu.ca/bin/wcm/course-outlines'
        params=""
        [ -z "$year" ] && year=$(request "$url" "$params")
        params="$year/"
        [ -z "$term" ] && term=$(request "$url" "$params")
        params="$params$term/"
        [ -z "$dept" ] && dept=$(request "$url" "$params")
        params="$params$dept/"
        [ -z "$cnum" ] && cnum=$(request "$url" "$params")
        params="$params$cnum/"
        [ -z "$sect" ] && sect=$(request "$url" "$params")
        params="$params$sect"
        # save the outline to a file
        outline_path=$(curl -s "$url?$params" | jq -r '.info.outlinePath')
        mkdir -p "$cache_dir/$outline_path"
        outline_file="$cache_dir/$outline_path/outline.json"
        curl -s "$url?$params" | jq > "$outline_file"
    fi
    # output the outline
    if $pretty; then
        python="./venv/bin/python"
        if [ -e "$python" ]; then
            "$python" ./display.py "$outline_file"
        else
            echo "ERROR: $python does not exist."
            echo
            echo "Ensure the python virtual environment is setup as shown in"
            echo "the README section titled \"Python Virtual Environment\"."
        fi
    else
        cat "$outline_file" | jq
    fi
}

main "$@"
